{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","isEditing","setIsEditing","onClick","enteredExpenseData","id","Math","random","toString","onAddExpense","onCancel","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","console","log","ExpensesList","items","length","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","dummy_expenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.076844d1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;","// import React, { useState } from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  // function clickHandler() {}\r\n  // const [title, setTitle] = useState(props.title);\r\n  console.log('ExpenseItem evaluated by React');\r\n\r\n  return (\r\n    <li>\r\n      <Card className='expense-item'>\r\n      <ExpenseDate date={props.date} />\r\n      <div className='expense-item__description'>\r\n        <h2>{props.title}</h2>\r\n        <div className='expense-item__price'>${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n    </li>\r\n    \r\n  );\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList  = (props)=>{\r\n\r\n    if(props.items.length===0){\r\n        return <h2 className='expenses-list__fallback'>Found No Expenses</h2>\r\n    }\r\n    \r\n\r\n    return <ul className='expenses-list'>{props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}</ul>\r\n}\r\n\r\nexport default ExpensesList","\r\nimport React, { useState } from 'react';\r\nimport ExpensesChart from './ExpensesChart'\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses ={filteredExpenses}/>\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import React,{useState} from 'react';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\nconst dummy_expenses = [\n  {\n    id: 'e1',\n    title: 'Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n]; \nconst App = () => {\n   const [expenses,setExpenses] = useState(dummy_expenses);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses=>{\n      return [expense,...prevExpenses]\n    })\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}